<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="yabe">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
              	
    <property name="catalina.home"   value="/home/superuser/apache-tomcat-7.0.68"/>
    	
    <property name="src" 			value="${basedir}/src"/>
	<property name="build" 			value="${basedir}/WebContent/yabe/WEB-INF"/>
		
    <property name="classes" 	value="${build}/classes"/>
    <property name="lib" 		value="${build}/lib"/>
    
	<property name="compile.debug"       value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize"    value="true"/>	
    	
	<path id="compile.classpath">

	    <fileset dir="${lib}">
	    	<include name="*.jar"/>
	    </fileset>
	    <fileset dir="${catalina.home}/lib">
	  	<include name="*.jar"/>
	    </fileset>
	</path>
    <path id="Web App Libraries.libraryclasspath"/>
    <path id="EAR Libraries.libraryclasspath"/>
    <path id="testing.classpath">
        <pathelement location="${classes}"/>
        <!--<path refid="Apache Tomcat v7.0 [Apache Tomcat v7.0].libraryclasspath"/>-->
        <path refid="Web App Libraries.libraryclasspath"/>
        <path refid="EAR Libraries.libraryclasspath"/>
    </path>
        	
    <target name="init">
    	<!--<copy includeemptydirs="false" todir="${classes}">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>-->
    </target>
              	
              	
    <target name="clean">
        <delete dir="${classes}/com"/>
    </target>
    <target depends="clean" name="cleanall"/>
              	
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
              	
    <target depends="clean" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac  
        	debuglevel="${debuglevel}" 
        	destdir="${classes}"  
        	srcdir="${src}" 
		debug="${compile.debug}"
	        deprecation="${compile.deprecation}"
    		includeAntRuntime="no"
	        optimize="${compile.optimize}"
	        listfiles="yes">

            <classpath refid="testing.classpath"/>
            <classpath refid="compile.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <!--
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    -->
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
        	<!--
        	<target name="compile"  depends="init" description="Compile Java sources">
    		    // Compile Java classes as necessary 
    		    <javac srcdir="${src}"
    		          destdir="${build}"
    		            debug="${compile.debug}"
    		      deprecation="${compile.deprecation}"
    		includeAntRuntime="no"
    		         optimize="${compile.optimize}"
    		        listfiles="yes">
    		        <classpath refid="compile.classpath"/>
    		    </javac>
    		</target>-->
</project>
